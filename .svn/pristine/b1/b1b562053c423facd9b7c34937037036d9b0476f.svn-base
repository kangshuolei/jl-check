package com.hbsi.user.service.impl;

import java.security.MessageDigest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hbsi.dao.UserMapper;
import com.hbsi.domain.User;
import com.hbsi.exception.BaseException;
import com.hbsi.exception.ExceptionEnum;
import com.hbsi.response.Response;
import com.hbsi.user.service.UserService;
import com.hbsi.util.SecurityMd5;

@Service
public class UserServiceImpl implements UserService{
	private Logger logger=LoggerFactory.getLogger(UserService.class);
	
	@Autowired
	private UserMapper userMapper;
	/**
	 * @description add user
	 */
	@Override
	public Response<User> saveUser(User user) {
		if(user==null) {
			/*记录错误日志*/
			logger.info("添加用户,{}",ExceptionEnum.USER_INFO_NULL.getMessage());
			/*抛出错误异常*/
			throw new BaseException(ExceptionEnum.USER_INFO_NULL);
		}else {
			if(user.getUsername()==null||"".equals(user.getUsername())) {
				logger.debug("添加用户,{}",ExceptionEnum.USER_INFO_NOT_COMPLETE.getMessage());
				throw new BaseException(ExceptionEnum.USER_INFO_NOT_COMPLETE);
			}
			if(user.getPassword()==null||"".equals(user.getPassword())) {
				logger.debug("添加用户,{}",ExceptionEnum.USER_INFO_NOT_COMPLETE.getMessage());
				throw new BaseException(ExceptionEnum.USER_INFO_NOT_COMPLETE);
			}
			if(user.getUserRank()==null||"".equals(user.getUserRank())) {
				logger.debug("添加用户,{}",ExceptionEnum.USER_INFO_NOT_COMPLETE.getMessage());
				throw new BaseException(ExceptionEnum.USER_INFO_NOT_COMPLETE);
			}
			if(user.getUserClass()==null||"".equals(user.getUserClass())) {
				logger.debug("添加用户,{}",ExceptionEnum.USER_INFO_NOT_COMPLETE.getMessage());
				throw new BaseException(ExceptionEnum.USER_INFO_NOT_COMPLETE);
			}
			try {
				String password=user.getPassword();
				user.setPassword(SecurityMd5.encode(password));
				int i=userMapper.insert(user);
				if(i==1) {
					logger.info("添加用户成功");
					return new Response<User>(user);
				}else {
					logger.error("添加用户错误，{}",ExceptionEnum.USER_SAVE_ERROR.getMessage());
					throw new BaseException(ExceptionEnum.USER_SAVE_ERROR);
				}
			} catch (Exception e) {
				logger.error("添加用户错误，{}",e.getLocalizedMessage());
				throw new BaseException(ExceptionEnum.USER_SAVE_ERROR);
			}
		}
		
	}

}
