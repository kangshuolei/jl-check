package com.hbsi.export.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.ResourceUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.hbsi.common.utils.word.MSWordTool;
import com.hbsi.domain.ExportDomain;
import com.hbsi.exception.BaseException;
import com.hbsi.exception.ExceptionEnum;
import com.hbsi.export.service.BreakOrigRecordService;
import com.hbsi.export.service.ReportExportService;
import com.hbsi.export.service.TestmanRecordService;
import com.hbsi.response.Response;

@RestController
@RequestMapping("/export")
public class ExportController {

	@Autowired
	private BreakOrigRecordService breakORService;
	@Autowired
	private ReportExportService  reportEService;
	@Autowired
	private TestmanRecordService testmanRecordService;
	Logger logger=LoggerFactory.getLogger(this.getClass());

		/**
		 * 导出测试报告结论（word下载形式）
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/steelWireReport")
		public void reportExportWord(String entrustNum,HttpServletResponse response) throws IOException{
			Map<String,Object> map=new HashMap<>();
			try {
				reportEService.ExportReport(entrustNum, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		/**
		 * 导出测试报告结论（json格式展示）
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/steelWireReportJson")
		public  Response<Map<String,Object>> reportExportJson(String entrustNum) throws IOException{
			Response<Map<String,Object>> rp=new Response<Map<String,Object>>();
			Map<String, Object> map=new HashMap<>();
			try {
				map = reportEService.ExportReportJson(entrustNum);
				rp.setData(map);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return rp;
		}
		
		/**
		 * 导出拆股实验原始报告数据（word下载形式）
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/breakStockReport")
		public void breakStockOriginalWord(String entrustNum,HttpServletResponse response) throws IOException{
			try {
				breakORService.BreakOrigRecord(entrustNum, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		/**
		 * 导出拆股实验原始报告数据（json格式展示）
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/breakStockReportJson")
		public Response<Map<String,Object>> breakStockOriginalJson(String entrustNum) throws IOException{
			Response<Map<String,Object>> rp=new Response<Map<String,Object>>();
			Map<String,Object> map=new HashMap<>();
			try {
				map = breakORService.BreakOrigRecordJson(entrustNum);
				rp.setData(map);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return rp;
		}
		
		/**
		 * 导出测试人记录报告excel数据
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/testmanRecordExcel")
		public void testmanRecordExcel(String entrustNum) throws IOException{
			try {
				testmanRecordService.ExportTestmanRecord(entrustNum);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		/**
		 * 导出测试人记录报告Json数据
		 * @param id
		 * @param response
		 * @throws IOException
		 */
		@GetMapping("/testmanRecordJson")
		public Response<List<Map<Integer, Object>>> testmanRecordJson(String entrustNum){
			Response<List<Map<Integer, Object>>> rp=new Response<List<Map<Integer, Object>>>();
			List<Map<Integer, Object>> list=new ArrayList<>();
			try {
				list = testmanRecordService.getRecordList(entrustNum);
				rp.setData(list);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return rp;
		}
		
		/**
		 * 手动修改结论报告信息
		 */
		@PostMapping("/updateConclusion")
		public Response updateSteelWireConlusion(@RequestBody ExportDomain exportDomain){
			return reportEService.updateConclusion(exportDomain);
		}
		/**
		 * 这个方法适用于前端修改拆股实验原始记录的版本好的方法
		 * @param info
		 * @return
		 */
		@PostMapping("/updateBreakOriVersonNumber")
		public Response updateVersionNumber(@RequestBody String info) {
			return breakORService.updateVersionNumber(info);
		}
}
