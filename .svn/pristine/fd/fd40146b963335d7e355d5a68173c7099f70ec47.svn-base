package com.hbsi.util;

import java.math.BigDecimal;

public class Arith {

	private static final int DEF_DIV_SCALE = 10;

	/**
	 * * 两个Double数相加 *
	 * 
	 * @param v1 *
	 * @param v2 *
	 * @return Double
	 */
	public static Double add(Double v1, Double v2) {
		BigDecimal b1 = new BigDecimal(v1.toString());
		BigDecimal b2 = new BigDecimal(v2.toString());
		return new Double(b1.add(b2).doubleValue());
	}

	/**
	 * * 两个Double数相减 *
	 * 
	 * @param v1 *
	 * @param v2 *
	 * @return Double
	 */
	public static Double sub(Double v1, Double v2) {
		BigDecimal b1 = new BigDecimal(v1.toString());
		BigDecimal b2 = new BigDecimal(v2.toString());
		return new Double(b1.subtract(b2).doubleValue());
	}

	/**
	 * * 两个Double数相乘 *
	 * 
	 * @param v1 *
	 * @param v2 *
	 * @return Double
	 */
	public static Double mul(Double v1, Double v2) {
		BigDecimal b1 = new BigDecimal(v1.toString());
		BigDecimal b2 = new BigDecimal(v2.toString());
		return new Double(b1.multiply(b2).doubleValue());
	}

	/**
	 * * 两个Double数相除 *
	 * 
	 * @param v1 *
	 * @param v2 *
	 * @return Double
	 */
	public static Double div(Double v1, Double v2) {
		BigDecimal b1 = new BigDecimal(v1.toString());
		BigDecimal b2 = new BigDecimal(v2.toString());
		return new Double(b1.divide(b2, DEF_DIV_SCALE, BigDecimal.ROUND_HALF_UP).doubleValue());
	}

	/**
	 * * 两个Double数相除，并保留scale位小数 *
	 * 
	 * @param v1 *
	 * @param v2 *
	 * @param scale *
	 * @return Double
	 */
	public static Double div(Double v1, Double v2, int scale) {
		if (scale < 0) {
			throw new IllegalArgumentException("The scale must be a positive integer or zero");
		}
		BigDecimal b1 = new BigDecimal(v1.toString());
		BigDecimal b2 = new BigDecimal(v2.toString());
		return new Double(b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).doubleValue());
	}

	/**
	 * 修约规则（4舍6入5单双）
	 * 
	 * @param d
	 * @return
	 */
	public static int revision(Double d) {
		int i = 0;
		String number = d.toString();
		String[] strs = number.split("\\.");
		String s = strs[0].toString();// 整数部分
		String s0 = strs[1].toString();// 小数部分
//		System.out.println("整数部分====" + s);
//		System.out.println("小数部分====" + s0);
		// 截取字符串
		String ss = s.substring(3, 4);
//		System.out.println("整数最后一位" + ss);
		String s1 = s0.substring(0, 1);
//		System.out.println("小数第一位" + s1);
		String s2 = s0.substring(1, 2);
//		System.out.println("小数第二位" + s2);
		String s3 = s0.substring(2, 3);
//		System.out.println("小数第三位" + s3);
		// 判断第一位小数
		int x = Integer.parseInt(ss);//整数最后一位
		int a = Integer.parseInt(s1);//第一位小数
		int b = Integer.parseInt(s2);//第二位小数
		int c = Integer.parseInt(s3);//第三位小数
		if(a>=0 && a<=4) {//舍
			i = Integer.parseInt(s);
		}else if(a>=6 && a<=9) {//入
			i = Integer.parseInt(s) + 1;
		}else if(a==5) {
			//如果5后面有>0的数值，进位
			if(b > 0) {//入
				i = Integer.parseInt(s) + 1;
			}else if(b == 0 || c == 0|| s3 == null) {
				if (x % 2 == 0) {//舍
					System.out.println("偶数");
					i = Integer.parseInt(s);
				}else {//入
					System.out.println("奇数");
					i = Integer.parseInt(s) + 1;
				}
			}
		}
//		System.out.println(i);
		return i;
	}

	public static void main(String[] args) {
//		double d = 1956.8559393;
		double d = 1953.515688;
		revision(d);
	}

}
