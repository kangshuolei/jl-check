<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbsi.dao.SteelWireDataMapper">
  <resultMap id="BaseResultMap" type="com.hbsi.domain.SteelWireData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entrustment_number" jdbcType="VARCHAR" property="entrustmentNumber" />
    <result column="production_number" jdbcType="VARCHAR" property="productionNumber" />
    <result column="p_diamete" jdbcType="DOUBLE" property="pDiamete" />
    <result column="f_diamete" jdbcType="DOUBLE" property="fDiamete" />
    <result column="n_diamete" jdbcType="DOUBLE" property="nDiamete" />
    <result column="use" jdbcType="VARCHAR" property="use" />
    <result column="surface" jdbcType="VARCHAR" property="surface" />
    <result column="break_tensile" jdbcType="DOUBLE" property="breakTensile" />
    <result column="tensile_strength" jdbcType="INTEGER" property="tensileStrength" />
    <result column="knot_tension" jdbcType="DOUBLE" property="knotTension" />
    <result column="knot_rate" jdbcType="DOUBLE" property="knotRate" />
    <result column="torsion_times" jdbcType="INTEGER" property="torsionTimes" />
    <result column="bending_times" jdbcType="INTEGER" property="bendingTimes" />
    <result column="steel_length" jdbcType="INTEGER" property="steelLength" />
    <result column="judge" jdbcType="VARCHAR" property="judge" />
    <result column="board" jdbcType="INTEGER" property="board" />
    <result column="wheel_number" jdbcType="VARCHAR" property="wheelNumber" />
    <result column="grade_steel" jdbcType="VARCHAR" property="gradeSteel" />
    <result column="producer" jdbcType="VARCHAR" property="producer" />
    <result column="recorder_number" jdbcType="VARCHAR" property="recorderNumber" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="sample_batch" jdbcType="INTEGER" property="sampleBatch" />
    <result column="strength_level" jdbcType="VARCHAR" property="strengthLevel" />
    <result column="memo" jdbcType="VARCHAR" property="memo"/>
    <result column="machine_type" jdbcType="VARCHAR" property="machineType" />
    <result column="machine_number" jdbcType="VARCHAR" property="machineNumber" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    id, entrustment_number, production_number, p_diamete, f_diamete, n_diamete, `use`, 
    surface, break_tensile, tensile_strength, knot_tension, knot_rate, torsion_times, 
    bending_times, steel_length, judge, board, wheel_number, grade_steel, producer, recorder_number, 
    state, sample_batch, memo, strength_level, machine_type, machine_number
  </sql>
  
  <!-- 添加钢丝数据，批量添加 -->
  <insert id="insertSteelData" parameterType="java.util.List" keyProperty="id" useGeneratedKeys="true">
    insert into steel_wire_data (entrustment_number, break_tensile, 
      torsion_times, bending_times, sample_batch, machine_type, machine_number)
    values 
    <foreach collection ="list" item="steelData" index="index" separator =",">
      (#{steelData.entrustmentNumber,jdbcType=VARCHAR}, #{steelData.breakTensile,jdbcType=DOUBLE},
      #{steelData.torsionTimes,jdbcType=INTEGER}, #{steelData.bendingTimes,jdbcType=INTEGER},
      #{steelData.sampleBatch,jdbcType=INTEGER},#{steelData.machineType,jdbcType=INTEGER},
      #{steelData.machineNumber,jdbcType=INTEGER})
    </foreach >
  </insert>
  
  <!-- 根据委托单号查询钢丝数据 -->
  <select id="selectByEnNum" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from steel_wire_data where entrustment_number=#{entrustmentNumber} and state='000'
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from steel_wire_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 根据委托单号删除数据 -->
  <delete id="deleteByEntrustment" parameterType="java.lang.String">
	delete from steel_wire_data 
	where entrustment_number=#{entrustmentNumber}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    delete from steel_wire_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hbsi.domain.SteelWireData">
    insert into steel_wire_data (id, entrustment_number, production_number, 
      p_diamete, f_diamete, n_diamete, 
      `use`, surface, break_tensile, 
      tensile_strength, knot_tension, knot_rate, 
      torsion_times, bending_times, steel_length, 
      judge, board, wheel_number, 
      grade_steel, producer, recorder_number, 
      state, memo, sample_batch,strength_level)
    values (#{id,jdbcType=INTEGER}, #{entrustmentNumber,jdbcType=VARCHAR}, #{productionNumber,jdbcType=VARCHAR}, 
      #{pDiamete,jdbcType=DOUBLE}, #{fDiamete,jdbcType=DOUBLE}, #{nDiamete,jdbcType=DOUBLE}, 
      #{use,jdbcType=VARCHAR}, #{surface,jdbcType=VARCHAR}, #{breakTensile,jdbcType=DOUBLE}, 
      #{tensileStrength,jdbcType=INTEGER}, #{knotTension,jdbcType=DOUBLE}, #{knotRate,jdbcType=DOUBLE}, 
      #{torsionTimes,jdbcType=INTEGER}, #{bendingTimes,jdbcType=INTEGER}, #{steelLength,jdbcType=INTEGER}, 
      #{judge,jdbcType=VARCHAR}, #{board,jdbcType=INTEGER}, #{wheelNumber,jdbcType=VARCHAR}, 
      #{gradeSteel,jdbcType=VARCHAR}, #{producer,jdbcType=VARCHAR}, #{recorderNumber,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{memo,jdbcType=VARCHAR}, #{sampleBatch,jdbcType=INTEGER},#{strengthLevel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hbsi.domain.SteelWireData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    insert into steel_wire_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entrustmentNumber != null">
        entrustment_number,
      </if>
      <if test="productionNumber != null">
        production_number,
      </if>
      <if test="pDiamete != null">
        p_diamete,
      </if>
      <if test="fDiamete != null">
        f_diamete,
      </if>
      <if test="nDiamete != null">
        n_diamete,
      </if>
      <if test="use != null">
        `use`,
      </if>
      <if test="surface != null">
        surface,
      </if>
      <if test="breakTensile != null">
        break_tensile,
      </if>
      <if test="tensileStrength != null">
        tensile_strength,
      </if>
      <if test="knotTension != null">
        knot_tension,
      </if>
      <if test="knotRate != null">
        knot_rate,
      </if>
      <if test="torsionTimes != null">
        torsion_times,
      </if>
      <if test="bendingTimes != null">
        bending_times,
      </if>
      <if test="steelLength != null">
        steel_length,
      </if>
      <if test="judge != null">
        judge,
      </if>
      <if test="board != null">
        board,
      </if>
      <if test="wheelNumber != null">
        wheel_number,
      </if>
      <if test="gradeSteel != null">
        grade_steel,
      </if>
      <if test="producer != null">
        producer,
      </if>
      <if test="recorderNumber != null">
        recorder_number,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="sampleBatch != null">
        sample_batch,
      </if>
      <if test="strengthLevel != null">
        strength_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entrustmentNumber != null">
        #{entrustmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="productionNumber != null">
        #{productionNumber,jdbcType=VARCHAR},
      </if>
      <if test="pDiamete != null">
        #{pDiamete,jdbcType=DOUBLE},
      </if>
      <if test="fDiamete != null">
        #{fDiamete,jdbcType=DOUBLE},
      </if>
      <if test="nDiamete != null">
        #{nDiamete,jdbcType=DOUBLE},
      </if>
      <if test="use != null">
        #{use,jdbcType=VARCHAR},
      </if>
      <if test="surface != null">
        #{surface,jdbcType=VARCHAR},
      </if>
      <if test="breakTensile != null">
        #{breakTensile,jdbcType=DOUBLE},
      </if>
      <if test="tensileStrength != null">
        #{tensileStrength,jdbcType=INTEGER},
      </if>
      <if test="knotTension != null">
        #{knotTension,jdbcType=DOUBLE},
      </if>
      <if test="knotRate != null">
        #{knotRate,jdbcType=DOUBLE},
      </if>
      <if test="torsionTimes != null">
        #{torsionTimes,jdbcType=INTEGER},
      </if>
      <if test="bendingTimes != null">
        #{bendingTimes,jdbcType=INTEGER},
      </if>
      <if test="steelLength != null">
        #{steelLength,jdbcType=INTEGER},
      </if>
      <if test="judge != null">
        #{judge,jdbcType=VARCHAR},
      </if>
      <if test="board != null">
        #{board,jdbcType=INTEGER},
      </if>
      <if test="wheelNumber != null">
        #{wheelNumber,jdbcType=VARCHAR},
      </if>
      <if test="gradeSteel != null">
        #{gradeSteel,jdbcType=VARCHAR},
      </if>
      <if test="producer != null">
        #{producer,jdbcType=VARCHAR},
      </if>
      <if test="recorderNumber != null">
        #{recorderNumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="sampleBatch != null">
        #{sampleBatch,jdbcType=INTEGER},
      </if>
      <if test="strengthLevel != null">
        #{strengthLevel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!-- 根据ID批量更新数据 -->
  <update id="updateByPrimaryKeySelective" parameterType="java.util.List">
  <foreach collection="list" item="item" index="index" separator=";" open="" close="">
    update steel_wire_data
    <set>
      <if test="item.productionNumber != null">
        production_number = #{item.productionNumber,jdbcType=VARCHAR},
      </if>
      <if test="item.pDiamete != null">
        p_diamete = #{item.pDiamete,jdbcType=DOUBLE},
      </if>
      <if test="item.fDiamete != null">
        f_diamete = #{item.fDiamete,jdbcType=DOUBLE},
      </if>
      <if test="item.nDiamete != null">
        n_diamete = #{item.nDiamete,jdbcType=DOUBLE},
      </if>
      <if test="item.use != null">
        `use` = #{item.use,jdbcType=VARCHAR},
      </if>
      <if test="item.surface != null">
        surface = #{item.surface,jdbcType=VARCHAR},
      </if>
      <if test="item.breakTensile != null">
        break_tensile = #{item.breakTensile,jdbcType=DOUBLE},
      </if>
      <if test="item.tensileStrength != null">
        tensile_strength = #{item.tensileStrength,jdbcType=INTEGER},
      </if>
      <if test="item.knotTension != null">
        knot_tension = #{item.knotTension,jdbcType=DOUBLE},
      </if>
      <if test="item.knotRate != null">
        knot_rate = #{item.knotRate,jdbcType=DOUBLE},
      </if>
      <if test="item.torsionTimes != null">
        torsion_times = #{item.torsionTimes,jdbcType=INTEGER},
      </if>
      <if test="item.bendingTimes != null">
        bending_times = #{item.bendingTimes,jdbcType=INTEGER},
      </if>
      <if test="item.steelLength != null">
        steel_length = #{item.steelLength,jdbcType=INTEGER},
      </if>
      <if test="item.judge != null">
        judge = #{item.judge,jdbcType=VARCHAR},
      </if>
      <if test="item.board != null">
        board = #{item.board,jdbcType=INTEGER},
      </if>
      <if test="item.wheelNumber != null">
        wheel_number = #{item.wheelNumber,jdbcType=VARCHAR},
      </if>
      <if test="item.gradeSteel != null">
        grade_steel = #{item.gradeSteel,jdbcType=VARCHAR},
      </if>
      <if test="item.producer != null">
        producer = #{item.producer,jdbcType=VARCHAR},
      </if>
      <if test="item.recorderNumber != null">
        recorder_number = #{item.recorderNumber,jdbcType=VARCHAR},
      </if>
      <if test="item.memo != null">
        memo = #{item.memo,jdbcType=VARCHAR},
      </if>
      <if test="item.strengthLevel != null">
        strength_level = #{item.strengthLevel,jdbcType=VARCHAR},
      </if>
      <if test="item.machineType != null">
        machine_type = #{item.machineType,jdbcType=VARCHAR},
      </if>
      <if test="item.machineNumber != null">
        machine_number = #{item.machineNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hbsi.domain.SteelWireData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    update steel_wire_data
    set entrustment_number = #{entrustmentNumber,jdbcType=VARCHAR},
      production_number = #{productionNumber,jdbcType=VARCHAR},
      p_diamete = #{pDiamete,jdbcType=DOUBLE},
      f_diamete = #{fDiamete,jdbcType=DOUBLE},
      n_diamete = #{nDiamete,jdbcType=DOUBLE},
      `use` = #{use,jdbcType=VARCHAR},
      surface = #{surface,jdbcType=VARCHAR},
      break_tensile = #{breakTensile,jdbcType=DOUBLE},
      tensile_strength = #{tensileStrength,jdbcType=INTEGER},
      knot_tension = #{knotTension,jdbcType=DOUBLE},
      knot_rate = #{knotRate,jdbcType=DOUBLE},
      torsion_times = #{torsionTimes,jdbcType=INTEGER},
      bending_times = #{bendingTimes,jdbcType=INTEGER},
      steel_length = #{steelLength,jdbcType=INTEGER},
      judge = #{judge,jdbcType=VARCHAR},
      board = #{board,jdbcType=INTEGER},
      wheel_number = #{wheelNumber,jdbcType=VARCHAR},
      grade_steel = #{gradeSteel,jdbcType=VARCHAR},
      producer = #{producer,jdbcType=VARCHAR},
      recorder_number = #{recorderNumber,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      memo = #{memo,jdbcType=VARCHAR},
      sample_batch = #{sampleBatch,jdbcType=INTEGER},
      strength_level = #{strengthLevel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbsi.domain.SteelWireData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 26 15:54:22 CST 2018.
    -->
    update steel_wire_data
    set entrustment_number = #{entrustmentNumber,jdbcType=VARCHAR},
      production_number = #{productionNumber,jdbcType=VARCHAR},
      p_diamete = #{pDiamete,jdbcType=DOUBLE},
      f_diamete = #{fDiamete,jdbcType=DOUBLE},
      n_diamete = #{nDiamete,jdbcType=DOUBLE},
      `use` = #{use,jdbcType=VARCHAR},
      surface = #{surface,jdbcType=VARCHAR},
      break_tensile = #{breakTensile,jdbcType=DOUBLE},
      tensile_strength = #{tensileStrength,jdbcType=INTEGER},
      knot_tension = #{knotTension,jdbcType=DOUBLE},
      knot_rate = #{knotRate,jdbcType=DOUBLE},
      torsion_times = #{torsionTimes,jdbcType=INTEGER},
      bending_times = #{bendingTimes,jdbcType=INTEGER},
      steel_length = #{steelLength,jdbcType=INTEGER},
      judge = #{judge,jdbcType=VARCHAR},
      board = #{board,jdbcType=INTEGER},
      wheel_number = #{wheelNumber,jdbcType=VARCHAR},
      grade_steel = #{gradeSteel,jdbcType=VARCHAR},
      producer = #{producer,jdbcType=VARCHAR},
      recorder_number = #{recorderNumber,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      sample_batch = #{sampleBatch,jdbcType=INTEGER},
      strength_level = #{strengthLevel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>